import  "dh_plant.cif";
svgfile "dh.svg";

// Start button
svgin  id "s_Dstartbutton"       event u_start;
svgout id "s_Dstartbutton"       attr "fill" value if s_Dstartbutton:        "darkgreen" else "green" end;
svgout id "a_Dstartled"          attr "fill" value if a_Dstartled:           "yellow" else "lightgrey" end;
// Reset button
svgin  id "s_Dresetbutton"       event u_reset;
svgout id "s_Dstopbutton"        attr "fill" value if s_Dstopbutton:         "maroon" else "#500" end;
svgout id "a_Dresetled"          attr "fill" value if a_Dresetled:           "yellow" else "lightgrey" end;
// Stop button
svgin  id "s_Dstopbutton"        event u_stop;
svgout id "s_Dresetbutton"       attr "fill" value if s_Dresetbutton:        "black" else "#4d4d4d" end;


// Actuator lights
svgout id "a_Dstartled_led"         attr "fill" value if a_Dstartled:            "lime" else "red" end;
svgout id "a_Dresetled_led"         attr "fill" value if a_Dresetled:            "lime" else "red" end;
svgout id "a_DledQ1_led"            attr "fill" value if a_DledQ1:               "lime" else "red" end;
svgout id "a_DledQ2_led"            attr "fill" value if a_DledQ2:               "lime" else "red" end;

svgout id "a_pusher1_led"           attr "fill" value if a_pusher1:              "lime" else "red" end;
svgout id "a_pusher2_led"           attr "fill" value if a_pusher2:              "lime" else "red" end;
svgout id "a_pusher3_led"           attr "fill" value if a_pusher3:              "lime" else "red" end;

svgout id "a_x2distributing_led"    attr "fill" value if a_x2distributing:       "lime" else "red" end;
svgout id "a_x2testing_led"         attr "fill" value if a_x2testing:            "lime" else "red" end;
svgout id "a_zdown_led"             attr "fill" value if a_zdown:                "lime" else "red" end;
svgout id "a_gripperclose_led"      attr "fill" value if a_gripperclose:         "lime" else "red" end;
svgout id "a_transfer2pickpos_led"  attr "fill" value if a_transfer2pickpos:     "lime" else "red" end;
svgout id "a_transfer2droppos_led"  attr "fill" value if a_transfer2droppos:     "lime" else "red" end;
svgout id "a_vacuum_led"            attr "fill" value if a_vacuum:               "lime" else "red" end;
svgout id "a_ejectpulse_led"        attr "fill" value if a_ejectpulse:           "lime" else "red" end;
svgout id "a_handlingready_led"     attr "fill" value if a_handlingready:        "lime" else "red" end;

// Moving the crane left end right
svgout id "crane_arm_base"          attr "transform" value fmt("translate(%s,0)",Rails.x);
svgout id "crane_arm_glider"        attr "transform" value fmt("translate(%s,0)",Rails.x);
svgout id "a_zdown"                 attr "transform" value fmt("translate(%s,0) translate(0,%s)",Rails.x,crane.y);
svgout id "crane_gripper_base"      attr "transform" value fmt("translate(%s,0) translate(0,%s)",Rails.x,crane.y);
svgout id "crane_right_claw_out"    attr "transform" value fmt("translate(%s,0) translate(0,%s)",Rails.x,crane.y);
svgout id "crane_left_claw_out"     attr "transform" value fmt("translate(%s,0) translate(0,%s)",Rails.x,crane.y);
svgout id "crane_right_claw_in"     attr "transform" value fmt("translate(%s,0) translate(0,%s)",Rails.x,crane.y);
svgout id "crane_left_claw_in"      attr "transform" value fmt("translate(%s,0) translate(0,%s)",Rails.x,crane.y);
//svg crane
// Rails_arm_glider:   OutputItem("Rails", "grey", Rails.x, 0);
// Crane_black_part: OutputItem("a_zdown", "black", 0, crane.y);
// Crane_gripper: OutputItem("crane_gripper_base", "grey", 0, crane.y);
// Crane_right_claw : OutputItem("crane_right_claw_out", "grey", 0, crane.y);
// Crane_left_claw : OutputItem("crane_left_claw_out", "grey", 0, crane.y);

group def OutputItem(alg string Label; alg string color; alg real x, y):
    svgout id Label attr "transform" value fmt("translate(%s,%s)", x, -y);
    svgout id Label attr "fill"      value if color = "": "none" else color end;
end

// Move block with crane
svgout id "prod_gripper"            attr "transform" value if s_gripper:    fmt("translate(%s,0) translate(0,%s)",Rails.x,crane.y)
                                                           else             fmt("translate(0,65.7)") end;

// Sense the position of the crane
svgout id "s_xpos_at1"              attr "fill" value if s_xpos_at1:             "lime" else "red" end;
svgout id "s_xpos_at2"              attr "fill" value if s_xpos_at2:             "lime" else "red" end;
svgout id "s_xpos_at3"              attr "fill" value if s_xpos_at3:             "lime" else "red" end;
svgout id "s_xpos_atdrop"           attr "fill" value if s_xpos_atdrop:          "lime" else "red" end;
svgout id "s_zpos_atup"             attr "fill" value if s_zpos_atup:            "lime" else "red" end;
svgout id "s_zpos_atdown"           attr "fill" value if s_zpos_atdown:          "lime" else "red" end;
svgout id "s_gripper"               attr "fill" value if s_gripper:              "lime" else "red" end;
svgout id "s_handlingbusy"          attr "fill" value if s_handlingbusy:         "lime" else "red" end;


// Sense the transfer
svgout id "s_transfer_atpickup"           attr "fill" value if s_transfer_atpickup:        "lime" else "red" end;
svgout id "s_transfer_athalfway"          attr "fill" value if s_transfer_athalfway:       "lime" else "red" end;
svgout id "s_transfer_atdrop"             attr "fill" value if s_transfer_atdrop:          "lime" else "red" end;
svgout id "s_vacuum"                      attr "fill" value if s_vacuum:                   "lime" else "red" end;
svgout id "s_product4"                    attr "fill" value if s_product4:                 "lime" else "red" end;
svgout id "s_testingbusy"                 attr "fill" value if s_testingbusy:              "lime" else "red" end;

// Show gripper correctly
svgout id "crane_right_claw_out"           attr "fill" value if not s_gripper:   "black" else "white" end;
svgout id "crane_left_claw_out"            attr "fill" value if not s_gripper:   "black" else "white" end;
svgout id "crane_right_claw_in"            attr "fill" value if s_gripper:       "black" else "white" end;
svgout id "crane_left_claw_in"             attr "fill" value if s_gripper:       "black" else "white" end;

// Sense the pusher position

svgout id "s_product1"                     attr "fill" value if s_product1:                "lime" else "red" end;
svgout id "s_stack1filled"                 attr "fill" value if s_stack1filled:            "lime" else "red" end;
svgout id "s_pusher1_out"                  attr "fill" value if s_pusher1_out:             "lime" else "red" end;
svgout id "s_pusher1_in"                   attr "fill" value if s_pusher1_in:              "lime" else "red" end;

svgout id "a_pusher1"                      attr "transform" value fmt("translate(%s,0)",pusher1.x);

svgout id "s_product2"                     attr "fill" value if s_product2:                "lime" else "red" end;
svgout id "s_stack2filled"                 attr "fill" value if s_stack2filled:            "lime" else "red" end;
svgout id "s_pusher2_out"                  attr "fill" value if s_pusher2_out:             "lime" else "red" end;
svgout id "s_pusher2_in"                   attr "fill" value if s_pusher2_in:              "lime" else "red" end;

svgout id "a_pusher2"                      attr "transform" value fmt("translate(%s,0)",pusher2.x);

svgout id "s_product3"                     attr "fill" value if s_product3:                "lime" else "red" end;
svgout id "s_stack3filled"                 attr "fill" value if s_stack3filled:            "lime" else "red" end;
svgout id "s_pusher3_out"                  attr "fill" value if s_pusher3_out:             "lime" else "red" end;
svgout id "s_pusher3_in"                   attr "fill" value if s_pusher3_in:              "lime" else "red" end;

svgout id "a_pusher3"                      attr "transform" value fmt("translate(%s,0)",pusher3.x);








